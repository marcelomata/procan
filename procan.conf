# ProcAn Example Configuration file
# Matthew W. Jones <matburt@oss-institute.org>
# 
# Rename this file to procan.conf
# and put it in either: /etc /usr/etc /usr/local/etc /usr/local/etc/procan
#                          or ./
# You can only either EXCLUDE something or INCLUDE something
# so only use one from those groups.

#Exclude these uids
excludeuids:
#ex: excludeuids: 0 7 70 1002

#Exclude these proc names (implies including all others)
excludeprocs: bzflag irq Xorg procan gnuplot python
#ex: excludeprocs: procan cron gkrellm

#The email address of administrators who will recieve notification
#by the mail backend
adminemail: root
#ex: adminemail: root 

#The warn level of procs that are getting slightly abnormal
#This will fire a warning email, log to syslog, trigger a script
#depending on which backends are enabled.  This is a good default
warnlevel: 150
#ex: warnlevel 50

#The alarm level of procs that are getting maybe too interesting
#This will fire an alarm email, log to syslog, trigger a script
#depending on which backends are enabled. This is a good default
alarmlevel: 250
#ex: alarmlevel: 100

#The frequency with which to mail status reports, in hours
#(disabled if the mail backend isn't being used)
mailfrequency: 1
#ex: mailfrequency: 72

#The frequency with which to log status reports to syslog, in hours
#(disabled if the syslog backend isn't being used)
logfrequency: 6
#ex: logfrequency: 2

#Full path to script to execute during a warn event.
#The PID, Proc name, Score, and interest level are passed to the script
warnscript: /home/mat/projects/procan/testwarn.py
#ex: warnscript: /usr/local/bin/adjustresources.py

#Full path to script to execute during an alarm event.
#The PID, Proc name, Score, and interest level are passed to the script
alarmscript: /home/mat/projects/procan/testalarm.py
#ex: alarmscript: /usr/local/bin/killthejerk.py

mtapath: /usr/sbin/sendmail
